@use "./variables" as v;

////////////////////////////////
// Still working on the transition style for the navigation bar
////////////////////////////////
@mixin transitionLink {
    position: relative;
    overflow: hidden;
    text-decoration: none;

    &::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: v.$secondPrimaryColor; // Color that will transition in
        z-index: -1; // Place the pseudo-element behind the text
        transition: all .8s ease;
        //transform: scaleX(0); // Start with no scaling
        //transform-origin: bottom right; // Set the transformation origin
    }

    &:hover {
        color: v.$secondPrimaryColor; // Change the text color on hover
    }
    // On hover, we scale the pseudo-element from left to right
    &:hover::before {
        width: 100%;
        opacity: 1;
    }
}

////////////////////////////////////////////////////////////////
/// scrolling animation from left to right
////////////////////////////////////////////////////////////////
@mixin scrollAnimationFromLeft {
    .hidden-element {
        opacity: 0;
        filter: blur(5px);
        transform: translateX(-100%);
        transition: all 1s ease;
    }
    .show {
        opacity: 1;
        filter: blur(0);
        transform: translateX(0);
    }
}

@mixin defaultButton {
    color: v.$firstPrimaryColor;
    background-color: v.$secondPrimaryColor;
    border: 1px solid v.$secondPrimaryColor;
    cursor: pointer;
    padding: 0.6rem 1.6rem;
    position: relative;
    font-weight: bolder;
    flex-shrink: unset;
    flex-basis: auto;

    // Pseudo-element styles
    &::after {
        content: ''; // Add an empty pseudo-element
        position: absolute;
        top: 0;
        left: 0;
        width: 100%; //Match the width of the button
        height: 100%; // Match the height of the button
        background-color: transparent; // stranparent
        transition: all v.$transition ease; // Add a smooth transition for the hover effect
        z-index: 1; //Ensure it appears above the button but below the text
        border: 1px solid v.$secondPrimaryColor; 
    }

    &::after {
        top: v.$offset;
        left: v.$offset;
    }

    // Hover effect
    &:hover::after {
        top: v.$negOffeset; // Shift the top position upward when hovered
        left: v.$negOffeset; // Shift the left position leftward when hovered
        bottom: 0;
        right: 0;
    }
}

@mixin flexCenter($height, $width) {
    display: flex;
    align-items: center;
    justify-content: space-between;
    padding: $height $width;
}

@mixin nakedButton {
    all: unset;
}

@mixin iconFormat {
    font-size: 24px;
    color: v.$primayFontColor;
}

@mixin hoverColor {
    color: v.$primayFontColor;
    background-color: v.$firstPrimaryColor;

    &:hover {
        color: v.$firstPrimaryColor;
        background-color: v.$secondPrimaryColor;
    }
}

////////////////////////////////////////////////
////////////////////////////////////////////////

@mixin textCase($color, $size) {
    text-transform: uppercase;
    color: $color;
    font-size: $size;
}

@mixin sectionTitle($color, $size) {
    color: $color; ;
    font-size: $size;
    font-weight: bolder;
}

@mixin articleService($image) {
    background-image: url($image);
    background-size: cover;
    display: flex;
    align-items: flex-end;
    background-position: center;
    padding: 10px;
    flex-grow: 1;
    min-height: 450px;
    flex-basis: 350px;
}

@mixin aritcleButton {
    color: v.$firstPrimaryColor;
    background-color: v.$secondPrimaryColor;
    border: 1px solid v.$secondPrimaryColor;
    cursor: pointer;
    padding: v.$paddingBoxHeight - 5px v.$paddingBoxWidth + 15px;
    position: relative;
    font-weight: bolder;
    font-size: 1.5em;
    text-align: left;
    // width: 97%;
    flex-grow: 1;
    flex-shrink: 1;
    //flex-basis: auto;

    &::after {
        content: '---->'; // Add an empty pseudo-element
        position: absolute;
        background-color: transparent; // stranparent
        z-index: 1; //Ensure it appears above the button but below the text
        opacity: 0;
        filter: blur(5px);
        transform: translateX(-100%);
        transition: all 0.5s ease;
        margin-left: 10px;
        font-weight: lighter;
    }

    &:hover::after {
        //top: v.$offset; // Shift the top position upward when hovered
        //left: v.$offset; // Shift the left position leftward when hovered
        opacity: 1;
        filter: blur(0);
        transform: translateX(0);
    }
}

////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////
@mixin defaultInput {
    height: 50px;
    color: v.$firstPrimaryColor;
    padding: v.$paddingBoxWidth;
    border: 1px solid rgba(v.$firstPrimaryColor, .3);
    outline: none;

    &:focus {
        border-color: v.$secondPrimaryColor;
        transition: v.$transition;
    }
}

@mixin slideButton($backgroundColor, $fontColor) {
    border: 1px solid $fontColor;
    border-radius: 100%;
    width: 60px;
    height: 60px;
    background: none;
    color: $fontColor;

    &:hover {
        background-color: $backgroundColor; 
        border: 1px solid $backgroundColor; 
        transition: all .7s ease;
    }
}

@mixin hoverLink {
    &:hover {
        opacity: .5;
        transition: v.$transition;
    }
}

////////////////////////////////////////////////
////////////////////////////////////////////////

@mixin activeButton {
    background-color: v.$firstPrimaryColor;
    color: v.$primayFontColor;
    padding: 0.9rem 1.6rem;
    position: relative;
    font-weight: bolder;
    text-align: center;
    border: none;
    flex-grow: 1;

    &:hover {
        background-color: v.$secondPrimaryColor;
        color: v.$firstPrimaryColor;
        transition: v.$transition;
    }
}

////////////////////////////////////////////////
////////////////////////////////////////////////

@mixin lozengeBullets {
    list-style-type: none;

    &::before {
        content: "â—†";  /* Lozenge symbol */
        color: v.$firstPrimaryColor;   /* Change color if needed */
        float: left;
        //font-size: 1.2em;
        //display: inline-block;
        //width: 1em; /* Space between symbol and text */
        margin-right: 8px;
    }
}